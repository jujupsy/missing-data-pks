\subsection*{$\eta$-Schätzung: $N = 10000$}
Nachfolgend sind für die empirischen Wissensstrukturen $\mathcal{K}_{err}$, $\mathcal{K}_{geh}$ und $\mathcal{K}_{ges}$ die $\eta$-Parameterschätzungen in Abhängigkeit der wahren Parameterwerte für eine simulierte Stichprobengröße von $N = 10000$ abgebildet. Dies geschieht für jedes Modell und jeden Dezimierungsmechanismus. Bei keiner Verzerrung sollten die Schätzungen auf der 1. Winkelhalbierenden liegen.

\begin{figure}[h!]
\begin{center}
<<echo=FALSE, results=hide>>=
ag_plot_err <- aggregate(estim_value ~ cond + model + para_q + para, data_t1_emp_err, mean)
ag_plot_err$SD <- aggregate(estim_value ~ cond + model + para_q + para, data_t1_emp_err, sd)[, 5]
ag_plot_err$true_value <- aggregate(true_value ~ cond + model + para_q + para, data_t1_emp_err, max)[, 5]

ag_plot_geh <- aggregate(estim_value ~ cond + model + para_q + para, data_t1_emp_geh, mean)
ag_plot_geh$SD <- aggregate(estim_value ~ cond + model + para_q + para, data_t1_emp_geh, sd)[, 5]
ag_plot_geh$true_value <- aggregate(true_value ~ cond + model + para_q + para, data_t1_emp_geh, max)[, 5]

ag_plot_ges <- aggregate(estim_value ~ cond + model + para_q + para, data_t1_emp_ges, mean)
ag_plot_ges$SD <- aggregate(estim_value ~ cond + model + para_q + para, data_t1_emp_ges, sd)[, 5]
ag_plot_ges$true_value <- aggregate(true_value ~ cond + model + para_q + para, data_t1_emp_ges, max)[, 5]

l.mat <- matrix(c(rep(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), each = 5)), 3, 20, byrow = TRUE)

# BLIM_COMP
pdf("plots/blim_comp_bias_emp_eta_n10000.pdf", width = 5.5, height = 5.1, pointsize = 12, family = "CM Roman")
par(mgp = c(1.3, .7, 0), mar = c(3.2, 2.5, .5, 0), oma = c(.5, 1, 2, 0.4))
layout(l.mat[c(rep(1:3, each = 5)) , ])

model <- "BLIM_COMP"
cond <- c("mc_1", "mc_5", "ks_1", "ks_5", 
          "mc_10", "mc_15", "ks_10", "ks_15", 
          "iks_C1", "iks_C2", "iks_C3", "iks_C4")
mu_q <-  c(.01,   .05,   0,    0, 
           .10,   .15,   0,    0, 
           .125,  .075, .03,  .005)
mu_q_ <- c(.01,   .05,  .02,  .1, 
           .10,   .15,  .2,   .3, 
           .005,  .03,  .075, .125) 
labels <- c(expression("mc"[1]), expression("mc"[5]), expression("ks"[1]), expression("ks"[5]),
            expression("mc"[10]), expression("mc"[15]), expression("ks"[10]), expression("ks"[15]),
            expression("iks"[c1]), expression("iks"[c2]), expression("iks"[c3]), expression("iks"[c4]))
for(i in 1:12){
plot(estim_value ~ true_value, 
     ag_plot_err[ag_plot_err$cond  == cond[i] & 
             ag_plot_err$model == model &
             ag_plot_err$para  == "eta", ],
     pch = 19, xlab = "", cex = .7,
     ylab = "", ylim = c(0, .5), xlim = c(0, .5), col = "blue")

with(ag_plot_err[ag_plot_err$cond  == cond[i] & 
                 ag_plot_err$model == model &
                 ag_plot_err$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "blue", lw = .6))
  
points(estim_value ~ true_value, 
       ag_plot_geh[ag_plot_geh$cond  == cond[i] & 
             ag_plot_geh$model == model &
             ag_plot_geh$para  == "eta", ], cex = .7, pch = 19, col = "red")

with(ag_plot_geh[ag_plot_geh$cond  == cond[i] & 
                 ag_plot_geh$model == model &
                 ag_plot_geh$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "red", lw = .6))
  
points(estim_value ~ true_value, 
       ag_plot_ges[ag_plot_ges$cond  == cond[i] & 
             ag_plot_ges$model == model &
             ag_plot_ges$para  == "eta", ], cex = .7, pch = 19, col = "green3")

with(ag_plot_ges[ag_plot_ges$cond  == cond[i] & 
                 ag_plot_ges$model == model &
                 ag_plot_ges$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "green3", lw = .6))
  
abline(a = 0, b = 1, lw = 0.5)

mtext(labels[i], 3, cex = .75, padj = -.2)
}

par(xpd = NA)
segments(-2.2, 0.62, x1 = 0.52, y1 = 0.62, lty = 2)
segments(-.87, 0.62, x1 = -.87, y1 = 2.1, lty = 2)
legend(x = -1.7, y = 2.25, legend = c("Erregbarkeit", "Gehemmtheit", "Gesundheitssorgen"), pch = c(19, 19, 19), col = c("blue", "red", "green3"), horiz = T, bty = "n")
par(xpd = FALSE)

mtext("Wahrer Parameterwert", 1, outer = T, padj = -0.9)
mtext("Parameterschätzung", 2, outer = T, padj = 0.7)

dev.off()
@
\includegraphics[width=.99\textwidth]{plots/blim_comp_bias_emp_eta_n10000}
\end{center}
\caption[$\eta$-Parameterschätzung des BLIM\textsubscript{COMP} für die emp. Wissensstrukturen $(N = 10000)$]{Mittlere $\eta$-Parameterschätzung des BLIM\textsubscript{COMP} in Abhängigkeit des wahren Parameterwertes für jedes der 12 Items der drei empirischen Wissensstrukturen $\mathcal{K}_{err}$, $\mathcal{K}_{geh}$ und $\mathcal{K}_{ges}$ für eine Stichprobengröße von $N = 10000$. Die durchgehende Linie zeigt die 1. Winkelhalbierende und die Standardabweichung ist als Fehlerbalken eingezeichnet.}
\end{figure}


\begin{figure}[hbtp]
\begin{center}
<<echo=FALSE, results=hide>>=

# BLIM_MAW
pdf("plots/blim_maw_bias_emp_eta_n10000.pdf", width = 5.5, height = 5.2, pointsize = 12, family = "CM Roman")
par(mgp = c(1.3, .7, 0), mar = c(3.2, 2.5, .5, 0), oma = c(.5, 1, 2, 0.4))
layout(l.mat[c(rep(1:3, each = 5)) , ])

model <- "BLIM_MAW"
cond <- c("mc_1", "mc_5", "ks_1", "ks_5", 
          "mc_10", "mc_15", "ks_10", "ks_15", 
          "iks_C1", "iks_C2", "iks_C3", "iks_C4")
mu_q <-  c(.01,   .05,   0,    0, 
           .10,   .15,   0,    0, 
           .125,  .075, .03,  .005)
mu_q_ <- c(.01,   .05,  .02,  .1, 
           .10,   .15,  .2,   .3, 
           .005,  .03,  .075, .125) 
labels <- c(expression("mc"[1]), expression("mc"[5]), expression("ks"[1]), expression("ks"[5]),
            expression("mc"[10]), expression("mc"[15]), expression("ks"[10]), expression("ks"[15]),
            expression("iks"[c1]), expression("iks"[c2]), expression("iks"[c3]), expression("iks"[c4]))
for(i in 1:12){
plot(estim_value ~ true_value, 
     ag_plot_err[ag_plot_err$cond  == cond[i] & 
             ag_plot_err$model == model &
             ag_plot_err$para  == "eta", ],
     pch = 19, xlab = "", cex = .7,
     ylab = "", ylim = c(0, .6), xlim = c(0, .5), col = "blue")

with(ag_plot_err[ag_plot_err$cond  == cond[i] & 
                 ag_plot_err$model == model &
                 ag_plot_err$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "blue", lw = .6))
  
points(estim_value ~ true_value, 
       ag_plot_geh[ag_plot_geh$cond  == cond[i] & 
             ag_plot_geh$model == model &
             ag_plot_geh$para  == "eta", ], cex = .7, pch = 19, col = "red")

with(ag_plot_geh[ag_plot_geh$cond  == cond[i] & 
                 ag_plot_geh$model == model &
                 ag_plot_geh$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "red", lw = .6))
  
points(estim_value ~ true_value, 
       ag_plot_ges[ag_plot_ges$cond  == cond[i] & 
             ag_plot_ges$model == model &
             ag_plot_ges$para  == "eta", ], cex = .7, pch = 19, col = "green3")

with(ag_plot_ges[ag_plot_ges$cond  == cond[i] & 
                 ag_plot_ges$model == model &
                 ag_plot_ges$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "green3", lw = .6))
  
abline(a = 0, b = 1, lw = 0.5)
abline(a = 0, b = (1 - mu_q_[i]), lty = 2, lw = .5)

mtext(labels[i], 3, cex = .75, padj = -.2)
}

par(xpd = NA)
segments(-2.2, 0.75, x1 = 0.52, y1 = 0.75, lty = 2)
segments(-.87, 0.75, x1 = -.87, y1 = 2.4, lty = 2)
legend(x = -1.7, y = 2.68, legend = c("Erregbarkeit", "Gehemmtheit", "Gesundheitssorgen"), pch = c(19, 19, 19), col = c("blue", "red", "green3"), horiz = T, bty = "n")
par(xpd = FALSE)

mtext("Wahrer Parameterwert", 1, outer = T, padj = -0.9)
mtext("Parameterschätzung", 2, outer = T, padj = 0.7)

dev.off()
@
\includegraphics[width=.99\textwidth]{plots/blim_maw_bias_emp_eta_n10000}
\end{center}
\caption[$\eta$-Parameterschätzung des BLIM\textsubscript{MAW} für die emp. Wissensstrukturen $(N = 10000)$]{Mittlere $\eta$-Parameterschätzung des BLIM\textsubscript{MAW} in Abhängigkeit des wahren Parameterwertes für jedes der 12 Items der drei empirischen Wissensstrukturen $\mathcal{K}_{err}$, $\mathcal{K}_{geh}$ und $\mathcal{K}_{ges}$ für eine Stichprobengröße von $N = 10000$. Die durchgehende Linie zeigt die 1. Winkelhalbierende und die gestrichelte die theoretisch zu erwartende Verzerrung. Die Standardabweichung ist als Fehlerbalken eingezeichnet.}
\end{figure}

\begin{figure}[hbtp]
\begin{center}
<<echo=FALSE, results=hide>>=

# BLIM_IMBLIM
pdf("plots/imblim_bias_emp_eta_n10000.pdf", width = 5.5, height = 5.2, pointsize = 12, family = "CM Roman")
par(mgp = c(1.3, .7, 0), mar = c(3.2, 2.5, .5, 0), oma = c(.5, 1, 2, 0.4))
layout(l.mat[c(rep(1:3, each = 5)) , ])

model <- "IMBLIM"
cond <- c("mc_1", "mc_5", "ks_1", "ks_5", 
          "mc_10", "mc_15", "ks_10", "ks_15", 
          "iks_C1", "iks_C2", "iks_C3", "iks_C4")
mu_q <-  c(.01,   .05,   0,    0, 
           .10,   .15,   0,    0, 
           .125,  .075, .03,  .005)
mu_q_ <- c(.01,   .05,  .02,  .1, 
           .10,   .15,  .2,   .3, 
           .005,  .03,  .075, .125) 
labels <- c(expression("mc"[1]), expression("mc"[5]), expression("ks"[1]), expression("ks"[5]),
            expression("mc"[10]), expression("mc"[15]), expression("ks"[10]), expression("ks"[15]),
            expression("iks"[c1]), expression("iks"[c2]), expression("iks"[c3]), expression("iks"[c4]))
for(i in 1:12){
plot(estim_value ~ true_value, 
     ag_plot_err[ag_plot_err$cond  == cond[i] & 
             ag_plot_err$model == model &
             ag_plot_err$para  == "eta", ],
     pch = 19, xlab = "", cex = .7,
     ylab = "", ylim = c(0, .5), xlim = c(0, .5), col = "blue")

with(ag_plot_err[ag_plot_err$cond  == cond[i] & 
                 ag_plot_err$model == model &
                 ag_plot_err$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "blue", lw = .6))
  
points(estim_value ~ true_value, 
       ag_plot_geh[ag_plot_geh$cond  == cond[i] & 
             ag_plot_geh$model == model &
             ag_plot_geh$para  == "eta", ], cex = .7, pch = 19, col = "red")

with(ag_plot_geh[ag_plot_geh$cond  == cond[i] & 
                 ag_plot_geh$model == model &
                 ag_plot_geh$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "red", lw = .6))
  
points(estim_value ~ true_value, 
       ag_plot_ges[ag_plot_ges$cond  == cond[i] & 
             ag_plot_ges$model == model &
             ag_plot_ges$para  == "eta", ], cex = .7, pch = 19, col = "green3")

with(ag_plot_ges[ag_plot_ges$cond  == cond[i] & 
                 ag_plot_ges$model == model &
                 ag_plot_ges$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "green3", lw = .6))
  
abline(a = 0, b = 1, lw = 0.5)

mtext(labels[i], 3, cex = .75, padj = -.2)
}

par(xpd = NA)
segments(-2.2, 0.62, x1 = 0.52, y1 = 0.62, lty = 2)
segments(-.87, 0.62, x1 = -.87, y1 = 2.1, lty = 2)
legend(x = -1.7, y = 2.23, legend = c("Erregbarkeit", "Gehemmtheit", "Gesundheitssorgen"), pch = c(19, 19, 19), col = c("blue", "red", "green3"), horiz = T, bty = "n")
par(xpd = FALSE)

mtext("Wahrer Parameterwert", 1, outer = T, padj = -0.9)
mtext("Parameterschätzung", 2, outer = T, padj = 0.7)

dev.off()
@
\includegraphics[width=.99\textwidth]{plots/imblim_bias_emp_eta_n10000}
\end{center}
\caption[$\eta$-Parameterschätzung des IMBLIM für die emp. Wissensstrukturen $(N = 10000)$]{Mittlere $\eta$-Parameterschätzung des IMBLIM in Abhängigkeit des wahren Parameterwertes für jedes der 12 Items der drei empirischen Wissensstrukturen $\mathcal{K}_{err}$, $\mathcal{K}_{geh}$ und $\mathcal{K}_{ges}$ für eine Stichprobengröße von $N = 10000$. Die durchgehende Linie zeigt die 1. Winkelhalbierende und die Standardabweichung ist als Fehlerbalken eingezeichnet.}
\end{figure}

\begin{figure}[hbtp]
\begin{center}
<<echo=FALSE, results=hide>>=

# MissBLIM
pdf("plots/missblim_bias_emp_eta_n10000.pdf", width = 5.5, height = 5.2, pointsize = 12, family = "CM Roman")
par(mgp = c(1.3, .7, 0), mar = c(3.2, 2.5, .5, 0), oma = c(.5, 1, 2, 0.4))
layout(l.mat[c(rep(1:3, each = 5)) , ])

model <- "MissBLIM"
cond <- c("mc_1", "mc_5", "ks_1", "ks_5", 
          "mc_10", "mc_15", "ks_10", "ks_15", 
          "iks_C1", "iks_C2", "iks_C3", "iks_C4")
mu_q <-  c(.01,   .05,   0,    0, 
           .10,   .15,   0,    0, 
           .125,  .075, .03,  .005)
mu_q_ <- c(.01,   .05,  .02,  .1, 
           .10,   .15,  .2,   .3, 
           .005,  .03,  .075, .125) 
labels <- c(expression("mc"[1]), expression("mc"[5]), expression("ks"[1]), expression("ks"[5]),
            expression("mc"[10]), expression("mc"[15]), expression("ks"[10]), expression("ks"[15]),
            expression("iks"[c1]), expression("iks"[c2]), expression("iks"[c3]), expression("iks"[c4]))
for(i in 1:12){
plot(estim_value ~ true_value, 
     ag_plot_err[ag_plot_err$cond  == cond[i] & 
             ag_plot_err$model == model &
             ag_plot_err$para  == "eta", ],
     pch = 19, xlab = "", cex = .7,
     ylab = "", ylim = c(0, .5), xlim = c(0, .5), col = "blue")

with(ag_plot_err[ag_plot_err$cond  == cond[i] & 
                 ag_plot_err$model == model &
                 ag_plot_err$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "blue", lw = .6))
  
points(estim_value ~ true_value, 
       ag_plot_geh[ag_plot_geh$cond  == cond[i] & 
             ag_plot_geh$model == model &
             ag_plot_geh$para  == "eta", ], cex = .7, pch = 19, col = "red")

with(ag_plot_geh[ag_plot_geh$cond  == cond[i] & 
                 ag_plot_geh$model == model &
                 ag_plot_geh$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "red", lw = .6))
  
points(estim_value ~ true_value, 
       ag_plot_ges[ag_plot_ges$cond  == cond[i] & 
             ag_plot_ges$model == model &
             ag_plot_ges$para  == "eta", ], cex = .7, pch = 19, col = "green3")

with(ag_plot_ges[ag_plot_ges$cond  == cond[i] & 
                 ag_plot_ges$model == model &
                 ag_plot_ges$para  == "eta", ],
  arrows(true_value, estim_value - SD, true_value, estim_value + SD, 
         angle = 90, length  = .01, code = 3, col = "green3", lw = .6))
  
abline(a = 0, b = 1, lw = 0.5)

mtext(labels[i], 3, cex = .75, padj = -.2)
}

par(xpd = NA)
segments(-2.2, 0.62, x1 = 0.52, y1 = 0.62, lty = 2)
segments(-.87, 0.62, x1 = -.87, y1 = 2.1, lty = 2)
legend(x = -1.7, y = 2.23, legend = c("Erregbarkeit", "Gehemmtheit", "Gesundheitssorgen"), pch = c(19, 19, 19), col = c("blue", "red", "green3"), horiz = T, bty = "n")
par(xpd = FALSE)

mtext("Wahrer Parameterwert", 1, outer = T, padj = -0.9)
mtext("Parameterschätzung", 2, outer = T, padj = 0.7)

dev.off()
@
\includegraphics[width=.99\textwidth]{plots/missblim_bias_emp_eta_n10000}
\end{center}
\caption[$\eta$-Parameterschätzung des MissBLIM für die emp. Wissensstrukturen $(N = 10000)$]{Mittlere $\eta$-Parameterschätzung des MissBLIM in Abhängigkeit des wahren Parameterwertes für jedes der 12 Items der drei empirischen Wissensstrukturen $\mathcal{K}_{err}$, $\mathcal{K}_{geh}$ und $\mathcal{K}_{ges}$ für eine Stichprobengröße von $N = 10000$. Die durchgehende Linie zeigt die 1. Winkelhalbierende und die Standardabweichung ist als Fehlerbalken eingezeichnet.}
\end{figure}


\subsection*{Wiederherstellung des latenten Wissenszustands}

<<echo=FALSE, results=hide>>=
### assesment accuracy Erregbarkeit

### data_t1 --> data_t1_emp
ag_asses_emp <- aggregate(mean_dist ~ cond + model, data_t1_emp_err, mean)
ag_asses_emp$SD <- aggregate(mean_dist ~ cond + model, data_t1_emp, sd)[, 3]
mat_dist_emp_err <- matrix(ag_asses_emp$mean_dist, nrow = 12, ncol = 4, byrow = F, dimnames = list(c("mc_1", "mc_5", "mc_10", "mc_15", "ks_1", "ks_5", "ks_10", "ks_15", "iks_c1", "iks_c2", "iks_c3", "iks_c4"), c("BLIM_comp", "BLIM_maw", "IMBLIM", "MissBLIM")))

mat_dist_sd_emp_err <- matrix(ag_asses_emp$SD, nrow = 12, ncol = 4, byrow = F, dimnames = list(c("mc_1", "mc_5", "mc_10", "mc_15", "ks_1", "ks_5", "ks_10", "ks_15", "iks_c1", "iks_c2", "iks_c3", "iks_c4"), c("BLIM_comp", "BLIM_maw", "IMBLIM", "MissBLIM")))

### assesment accuracy Gehemmtheit

### data_t1 --> data_t1_emp
ag_asses_emp <- aggregate(mean_dist ~ cond + model, data_t1_emp_geh, mean)
ag_asses_emp$SD <- aggregate(mean_dist ~ cond + model, data_t1_emp, sd)[, 3]
mat_dist_emp_geh <- matrix(ag_asses_emp$mean_dist, nrow = 12, ncol = 4, byrow = F, dimnames = list(c("mc_1", "mc_5", "mc_10", "mc_15", "ks_1", "ks_5", "ks_10", "ks_15", "iks_c1", "iks_c2", "iks_c3", "iks_c4"), c("BLIM_comp", "BLIM_maw", "IMBLIM", "MissBLIM")))

mat_dist_sd_emp_geh <- matrix(ag_asses_emp$SD, nrow = 12, ncol = 4, byrow = F, dimnames = list(c("mc_1", "mc_5", "mc_10", "mc_15", "ks_1", "ks_5", "ks_10", "ks_15", "iks_c1", "iks_c2", "iks_c3", "iks_c4"), c("BLIM_comp", "BLIM_maw", "IMBLIM", "MissBLIM")))

### assesment accuracy Gesundheitssorgen

### data_t1 --> data_t1_emp
ag_asses_emp <- aggregate(mean_dist ~ cond + model, data_t1_emp_ges, mean)
ag_asses_emp$SD <- aggregate(mean_dist ~ cond + model, data_t1_emp, sd)[, 3]
mat_dist_emp_ges <- matrix(ag_asses_emp$mean_dist, nrow = 12, ncol = 4, byrow = F, dimnames = list(c("mc_1", "mc_5", "mc_10", "mc_15", "ks_1", "ks_5", "ks_10", "ks_15", "iks_c1", "iks_c2", "iks_c3", "iks_c4"), c("BLIM_comp", "BLIM_maw", "IMBLIM", "MissBLIM")))

mat_dist_sd_emp_ges <- matrix(ag_asses_emp$SD, nrow = 12, ncol = 4, byrow = F, dimnames = list(c("mc_1", "mc_5", "mc_10", "mc_15", "ks_1", "ks_5", "ks_10", "ks_15", "iks_c1", "iks_c2", "iks_c3", "iks_c4"), c("BLIM_comp", "BLIM_maw", "IMBLIM", "MissBLIM")))

@

%alle Skalen in einer Abbildung
\begin{figure}[h!]
\begin{center}
<<echo=FALSE, results=hide>>=
pdf("plots/m_dist_emp_n10000.pdf", width = 5.5, height = 5.6, pointsize = 12, family="CM Roman")
par(mfrow = c(3, 1), mar = c(2, 3, .1, .01), mgp = c(2, .5, 0), oma = c(1.2, 1, 3, 0.4))
# Erregbarkeit
bar <- barplot(t(mat_dist_emp_err), beside = T, col = c("#F8766D", "#7CAE00", "#00BFC4", "#C77CFF"), 
        axes = F, cex.names = .7, border = NA,
       ylab = "", ylim = c(0, 1.4), xlab = "",
       names.arg = c(expression("mc"[1]), expression("mc"[5]), expression("mc"[10]), expression("mc"[15]),
                     expression("ks"[1]), expression("ks"[5]), expression("ks"[10]), expression("ks"[15]),
                     expression("iks"[c1]), expression("iks"[c2]), expression("iks"[c3]), expression("iks"[c4])),
       legend.text	= TRUE, args.legend=list(legend = c(expression("BLIM"[COMP]), expression("BLIM"[MAW]), "IMBLIM", "MissBLIM"), 
                                            x = "topleft", bty = "n", horiz = TRUE, inset = c(0, -0.2), cex = 1.4, xpd = NA))
arrows(bar, t(mat_dist_emp_err) - t(mat_dist_sd_emp_err), bar, t(mat_dist_emp_err) + t(mat_dist_sd_emp_err), angle = 90, code = 3, length = .01, col = "gray18")
par(xpd = FALSE)
abline(v = 20.5, lty = 2)
abline(v = 40.5, lty = 2)
axis(2)
text(bar[length(bar) - 1] - 1, 1.25, "Erregbarkeit")
box()

# Gehemmtheit
bar <- barplot(t(mat_dist_emp_geh), beside = T, col = c("#F8766D", "#7CAE00", "#00BFC4", "#C77CFF"), 
        axes = F, cex.names = .7, border = NA,
       ylab = "", ylim = c(0, 1.4), xlab = "",
       names.arg = c(expression("mc"[1]), expression("mc"[5]), expression("mc"[10]), expression("mc"[15]),
                     expression("ks"[1]), expression("ks"[5]), expression("ks"[10]), expression("ks"[15]),
                     expression("iks"[c1]), expression("iks"[c2]), expression("iks"[c3]), expression("iks"[c4])),
       legend.text	= FALSE, args.legend=list(legend = c(expression("BLIM"[COMP]), expression("BLIM"[MAW]), "IMBLIM", "MissBLIM"), x = "topleft", bty = "n"))
arrows(bar, t(mat_dist_emp_geh) - t(mat_dist_sd_emp_geh), bar, t(mat_dist_emp_geh) + t(mat_dist_sd_emp_geh), angle = 90, code = 3, length = .01, col = "gray18")
abline(v = 20.5, lty = 2)
abline(v = 40.5, lty = 2)
axis(2)
text(bar[length(bar) - 1] - 1.2, 1.25, "Gehemmtheit")
box()

# Gesundheitssorgen
bar <- barplot(t(mat_dist_emp_ges), beside = T, col = c("#F8766D", "#7CAE00", "#00BFC4", "#C77CFF"), 
        axes = F, cex.names = .7, border = NA,
       ylab = "", ylim = c(0, 1.4), xlab = "",
       names.arg = c(expression("mc"[1]), expression("mc"[5]), expression("mc"[10]), expression("mc"[15]),
                     expression("ks"[1]), expression("ks"[5]), expression("ks"[10]), expression("ks"[15]),
                     expression("iks"[c1]), expression("iks"[c2]), expression("iks"[c3]), expression("iks"[c4])),
       legend.text	= FALSE, args.legend=list(legend = c(expression("BLIM"[COMP]), expression("BLIM"[MAW]), "IMBLIM", "MissBLIM"), x = "topleft", bty = "n", horiz = TRUE))
arrows(bar, t(mat_dist_emp_ges) - t(mat_dist_sd_emp_ges), bar, t(mat_dist_emp_ges) + t(mat_dist_sd_emp_ges), angle = 90, code = 3, length = .01, col = "gray18")
abline(v = 20.5, lty = 2)
abline(v = 40.5, lty = 2)
axis(2)
text(bar[length(bar) - 1] - 2.9, 1.25, "Gesundheitssorgen")
box()

mtext("Dezimierungsmechanismus", 1, outer = T, padj = 0)
mtext("Mittlere symmetrische Distanz", 2, outer = T, padj = 0.7)

dev.off()
@
\includegraphics[width=.99\textwidth]{plots/m_dist_emp_n10000}
\end{center}
\caption[Mittlere symmetrische Distanzen für emp. Wissensstrukturen $(N = 10000)$]{Mittlere symmetrische Distanz in Abhängigkeit des Modells und Dezimierungsmechanismus basierend auf den Skalen Erregbarkeit, Gehemmtheit und Gesundheitssorgen bzw. den unterliegenden Wissensstrukturen $\mathcal{K}_{err}$, $\mathcal{K}_{geh}$ und $\mathcal{K}_{ges}$ für eine simulierte Stichprobengröße mit $N = 10000$.}
\label{fig:m_dist_emp_n10000}
\end{figure}






